<!DOCTYPE html>
<html>
  <head>
    <title>DB Visual Music Player</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1>DB Visual Music Player</h1>
    <form action='/' method='post' >
	    <table>
	    <tr>
	    	<td>Country</td>
	    	<td> <input type="text" name="country"></td>
	    </tr>
	    <tr>
	    	<td>From</td>
	    	<td><input type="text" name="fromYear"></td>
	    </tr>
	    <tr>
	    	<td>To</td>
	    	<td><input type="text" name="toYear"></td>
	    </tr>
	    <tr>
	    	<td><input type="submit"></td>
	   	</tr>
	    </table>
    </form>
    <div id='noCountries'>Number of songs from country is {{ no_of_songs }}</div>
    

   <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: '{{ youtube_link }}',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  </body>
</html>